{
  "version": 3,
  "sources": ["../../moment/locale/de.js"],
  "sourcesContent": ["//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eine Minute', 'einer Minute'],\n            h: ['eine Stunde', 'einer Stunde'],\n            d: ['ein Tag', 'einem Tag'],\n            dd: [number + ' Tage', number + ' Tagen'],\n            w: ['eine Woche', 'einer Woche'],\n            M: ['ein Monat', 'einem Monat'],\n            MM: [number + ' Monate', number + ' Monaten'],\n            y: ['ein Jahr', 'einem Jahr'],\n            yy: [number + ' Jahre', number + ' Jahren'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var de = moment.defineLocale('de', {\n        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort:\n            'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact: true,\n        weekdays:\n            'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(\n                '_'\n            ),\n        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd, D. MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: 'vor %s',\n            s: 'ein paar Sekunden',\n            ss: '%d Sekunden',\n            m: processRelativeTime,\n            mm: '%d Minuten',\n            h: processRelativeTime,\n            hh: '%d Stunden',\n            d: processRelativeTime,\n            dd: processRelativeTime,\n            w: processRelativeTime,\n            ww: '%d Wochen',\n            M: processRelativeTime,\n            MM: processRelativeTime,\n            y: processRelativeTime,\n            yy: processRelativeTime,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    return de;\n\n})));\n"],
  "mappings": ";;;;;;;;;AAAA;AAAA;AAMC,KAAC,SAAU,QAAQ,SAAS;AAC1B,aAAO,YAAY,YAAY,OAAO,WAAW,eAC1C,OAAO,cAAY,aAAa,QAAQ,gBAAoB,IACnE,OAAO,WAAW,cAAc,OAAO,MAAM,OAAO,CAAC,WAAW,GAAG,OAAO,IAC1E,QAAQ,OAAO,MAAM;AAAA,IACxB,GAAE,SAAO,SAAU,QAAQ;AAAE;AAIzB,eAAS,oBAAoB,QAAQ,eAAe,KAAK,UAAU;AAC/D,YAAI,SAAS;AAAA,UACT,GAAG,CAAC,eAAe,cAAc;AAAA,UACjC,GAAG,CAAC,eAAe,cAAc;AAAA,UACjC,GAAG,CAAC,WAAW,WAAW;AAAA,UAC1B,IAAI,CAAC,SAAS,SAAS,SAAS,QAAQ;AAAA,UACxC,GAAG,CAAC,cAAc,aAAa;AAAA,UAC/B,GAAG,CAAC,aAAa,aAAa;AAAA,UAC9B,IAAI,CAAC,SAAS,WAAW,SAAS,UAAU;AAAA,UAC5C,GAAG,CAAC,YAAY,YAAY;AAAA,UAC5B,IAAI,CAAC,SAAS,UAAU,SAAS,SAAS;AAAA,QAC9C;AACA,eAAO,gBAAgB,OAAO,GAAG,EAAE,CAAC,IAAI,OAAO,GAAG,EAAE,CAAC;AAAA,MACzD;AAEA,UAAI,KAAK,OAAO,aAAa,MAAM;AAAA,QAC/B,QAAQ,qFAAqF;AAAA,UACzF;AAAA,QACJ;AAAA,QACA,aACI,6DAA6D,MAAM,GAAG;AAAA,QAC1E,kBAAkB;AAAA,QAClB,UACI,8DAA8D;AAAA,UAC1D;AAAA,QACJ;AAAA,QACJ,eAAe,8BAA8B,MAAM,GAAG;AAAA,QACtD,aAAa,uBAAuB,MAAM,GAAG;AAAA,QAC7C,oBAAoB;AAAA,QACpB,gBAAgB;AAAA,UACZ,IAAI;AAAA,UACJ,KAAK;AAAA,UACL,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,KAAK;AAAA,UACL,MAAM;AAAA,QACV;AAAA,QACA,UAAU;AAAA,UACN,SAAS;AAAA,UACT,UAAU;AAAA,UACV,SAAS;AAAA,UACT,UAAU;AAAA,UACV,SAAS;AAAA,UACT,UAAU;AAAA,QACd;AAAA,QACA,cAAc;AAAA,UACV,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,GAAG;AAAA,UACH,IAAI;AAAA,QACR;AAAA,QACA,wBAAwB;AAAA,QACxB,SAAS;AAAA,QACT,MAAM;AAAA,UACF,KAAK;AAAA;AAAA,UACL,KAAK;AAAA;AAAA,QACT;AAAA,MACJ,CAAC;AAED,aAAO;AAAA,IAEX,CAAE;AAAA;AAAA;",
  "names": []
}
